---

apiVersion: v1
kind: Namespace
metadata:
  name: monitoring

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-pv
  namespace: monitoring
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  storageClassName: elasticsearch
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /mnt/data/log/elastic

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
  namespace: monitoring
spec:
  storageClassName: elasticsearch
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: elasticsearch
data:
  elasticsearch.yml: |-
    discovery.type: single-node
    network.host: 0.0.0.0

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      volumes:
        - name: elasticsearch-config
          configMap:
            name: elasticsearch
        - name: elasticsearch-storage
          persistentVolumeClaim:
            claimName: elasticsearch-pvc

      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
          ports:
            - containerPort: 9200
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
              name: elasticsearch-config
            - mountPath: /usr/share/elasticsearch/data/nodes
              name: elasticsearch-storage
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: monitoring
spec:
  selector:
    app: elasticsearch
  ports:
    - name: es1
      protocol: TCP
      port: 9200

    - name: es2
      protocol: TCP
      port: 9300

# kibana
---
---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: kibana
data:
  kibana.yml: |-
    server:
      basePath: "/kibana"
      name: kibana

      host: "0.0.0.0"

    elasticsearch:
      hosts: ["http://elasticsearch.monitoring.svc.cluster.local:9200"]

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      volumes:
        - name: kibana-config
          configMap:
            name: kibana
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:7.6.1
          volumeMounts:
            - mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
              name: kibana-config

---

apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: monitoring
spec:
  selector:
    app: kibana
  ports:
    -  port: 5601

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kibana
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$1

spec:
  rules:
    - http:
        paths:
          - path: /kibana/(.*)
            backend:
              serviceName: kibana
              servicePort: 5601
