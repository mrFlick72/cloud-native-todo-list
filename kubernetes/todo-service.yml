apiVersion: v1
kind: Namespace
metadata:
  name: todo-service

---

apiVersion: v1
kind: Secret
metadata:
  name: todo-service
  namespace: todo-service
stringData:
  DATABASE_USER: root
  DATABASE_PASSWORD: root

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: todo-service-config
  namespace: todo-service
data:
  WEB_SERVER_PORT: "8080"
  DATABASE_URL:  "mysql.infrastructure.svc.cluster.local"
  LOGGING_FILE_NAME:  "/var/log/todo-list/todo-service.log"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: todo-service
data:
  filebeat.yml: |-
    filebeat.config:
      modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: true

    filebeat.inputs:
      - type: log
        multiline.pattern: '^java.|^[[:space:]]+(at|\.{3})\b|^Caused by:|^END:'
        multiline.negate: false
        multiline.match: after

        enabled: true
        paths:
          - /var/log/todo-list/*.log

    processors:
      - add_cloud_metadata: ~
      - add_docker_metadata: ~

    setup.kibana:
      host: "kibana.monitoring.svc.cluster.local:5601"

    output.elasticsearch:
      hosts: ['elasticsearch.monitoring.svc.cluster.local:9200']

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-service
  namespace: todo-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-service
  template:
    metadata:
      labels:
        app: todo-service
    spec:
      volumes:
        - name: filebeat
          configMap:
            name: filebeat-config

        - name: application-logs
          emptyDir: {}

        - name: application-config
          configMap:
            name: todo-service
      containers:
        - name: filebeats
          image: docker.elastic.co/beats/filebeat:7.6.1
          volumeMounts:
            - name: application-logs
              mountPath: /var/log/todo-list/

            - name: filebeat
              subPath: filebeat.yml
              mountPath: /usr/share/filebeat/filebeat.yml

        - name: todo-service
          image: mrflick72/todo-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /var/log/todo-list/
              name: application-logs

          envFrom:
            - configMapRef:
                name: todo-service-config
            - secretRef:
                name: todo-service

---

apiVersion: v1
kind: Service
metadata:
  name: todo-service
  namespace: todo-service
spec:
  selector:
    app: todo-service
  ports:
    - port: 8080
