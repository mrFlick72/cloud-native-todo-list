apiVersion: v1
kind: Namespace
metadata:
  name: infrastructure

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: database-pv
  namespace: infrastructure
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  storageClassName: database
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /mnt/data

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-pvc
  namespace: infrastructure
spec:
  storageClassName: database
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
        - emptyDir: {}
          name: dump

        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: database-pvc

      initContainers:
        - name: database-schema-init
          image: mwendler/wget
          command: ["wget","--no-check-certificate","https://raw.githubusercontent.com/mrFlick72/cloud-native-todo-list/master/docker/database/schema.sql","-O","/docker-entrypoint-initdb.d/schema.sql"]
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: dump

        - name: todo-list-schema-init
          image: mwendler/wget
          command: ["wget","--no-check-certificate","https://raw.githubusercontent.com/mrFlick72/cloud-native-todo-list/master/docker/database/todo.sql","-O","/docker-entrypoint-initdb.d/todo.sql"]
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: dump


        - name: keycloak-schema-init
          image: mwendler/wget
          command: ["wget","--no-check-certificate","https://raw.githubusercontent.com/mrFlick72/cloud-native-todo-list/master/docker/database/keycloak.sql","-O","/docker-entrypoint-initdb.d/keycloak.sql"]
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: dump

      containers:
        - name: mysql
          image: mysql
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root

          volumeMounts:
            - name: dump
              mountPath: /docker-entrypoint-initdb.d

            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: infrastructure
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
